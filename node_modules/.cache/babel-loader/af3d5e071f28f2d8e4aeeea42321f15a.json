{"ast":null,"code":"var _jsxFileName = \"E:\\\\Github\\\\QuizApp\\\\src\\\\QuizPlayCard.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { quizOne } from \"./quizData\";\nimport { useQuiz } from \"./QuizProvider\";\nimport { Header } from \"./Header\";\nimport { Button, Text, Heading, useColorModeValue } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function QuizPlayCard() {\n  _s();\n\n  var _getQuiz$questions$st,\n      _getQuiz$questions$st2,\n      _this = this;\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var getQuiz = quizOne.find(function (item) {\n    return item.id === Number(id);\n  });\n  var navigate = useNavigate();\n\n  var _useQuiz = useQuiz(),\n      state = _useQuiz.state,\n      dispatch = _useQuiz.dispatch,\n      showNextBtn = _useQuiz.showNextBtn,\n      setShowNextBtn = _useQuiz.setShowNextBtn,\n      setUserClick = _useQuiz.setUserClick,\n      userClick = _useQuiz.userClick,\n      selected = _useQuiz.selected,\n      setSelected = _useQuiz.setSelected;\n\n  var color = useColorModeValue(\"gray.800\", \"white\");\n\n  function answerClick(_ref) {\n    var text = _ref.text,\n        isRight = _ref.isRight;\n    setSelected(text);\n    setShowNextBtn(true);\n    setUserClick(true);\n    getQuiz === null || getQuiz === void 0 ? void 0 : getQuiz.questions[state.questionNumber].options.find(function (item) {\n      if (item.text === text && item.isRight === true) dispatch({\n        type: \"SCORE\",\n        payload: {\n          score: 10\n        }\n      });\n    });\n  }\n\n  function selectOptionHandler(_ref2) {\n    var text = _ref2.text,\n        isRight = _ref2.isRight;\n    if (selected === text && isRight === true) return \"wright\";else if (selected === text && isRight === false) return \"wrong\";else if (isRight === true) return \"wright\";\n  }\n\n  function nextHandler() {\n    if (state.questionNumber <= 10) {\n      dispatch({\n        type: \"QUESTION\"\n      });\n      setShowNextBtn(false);\n      setUserClick(false);\n      setSelected(\"\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"70%\",\n        margin: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h2\",\n        size: \"xl\",\n        children: [getQuiz === null || getQuiz === void 0 ? void 0 : getQuiz.quizName, \" Quiz !!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h4\",\n          size: \"md\",\n          children: [\"Questions \", state.questionNumber + 1, \"/\", getQuiz === null || getQuiz === void 0 ? void 0 : getQuiz.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h4\",\n          size: \"md\",\n          children: [\"Score \", state.score, \"/100\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"initial\",\n          marginTop: \"2rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"2xl\",\n          children: [state.questionNumber + 1, \".\", getQuiz === null || getQuiz === void 0 ? void 0 : (_getQuiz$questions$st = getQuiz.questions[state.questionNumber]) === null || _getQuiz$questions$st === void 0 ? void 0 : _getQuiz$questions$st.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), getQuiz === null || getQuiz === void 0 ? void 0 : (_getQuiz$questions$st2 = getQuiz.questions[state.questionNumber]) === null || _getQuiz$questions$st2 === void 0 ? void 0 : _getQuiz$questions$st2.options.map(function (option) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: userClick,\n              className: \"btnstyle  \".concat(selected && selectOptionHandler(option)),\n              value: option.text,\n              onClick: function onClick() {\n                return answerClick(option);\n              },\n              children: /*#__PURE__*/_jsxDEV(Heading, {\n                as: \"h5\",\n                size: \"sm\",\n                mt: 1,\n                color: color,\n                children: option.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 20\n              }, _this)\n            }, option.text, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, _this)\n          }, option.text, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, _this);\n        }), state.questionNumber <= 8 && showNextBtn && /*#__PURE__*/_jsxDEV(Button, {\n          size: \"md\",\n          marginTop: \"1rem\",\n          border: \"2px\",\n          borderColor: \"green.500\",\n          onClick: nextHandler,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), state.questionNumber === 9 && /*#__PURE__*/_jsxDEV(Button, {\n          size: \"md\",\n          marginTop: \"1rem\",\n          border: \"2px\",\n          borderColor: \"red.500\",\n          onClick: function onClick() {\n            return navigate(\"/quizendpage\");\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QuizPlayCard, \"laCxS7sC6Uf6R/ztyJEVmpOZXng=\", false, function () {\n  return [useParams, useNavigate, useQuiz, useColorModeValue];\n});\n\n_c = QuizPlayCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizPlayCard\");","map":{"version":3,"sources":["E:/Github/QuizApp/src/QuizPlayCard.tsx"],"names":["useNavigate","useParams","quizOne","useQuiz","Header","Button","Text","Heading","useColorModeValue","QuizPlayCard","id","getQuiz","find","item","Number","navigate","state","dispatch","showNextBtn","setShowNextBtn","setUserClick","userClick","selected","setSelected","color","answerClick","text","isRight","questions","questionNumber","options","type","payload","score","selectOptionHandler","nextHandler","width","margin","quizName","display","justifyContent","length","textAlign","marginTop","question","map","option"],"mappings":"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","sourcesContent":["import \"./styles.css\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { quizOne } from \"./quizData\";\r\nimport { useQuiz } from \"./QuizProvider\";\r\nimport { Header } from \"./Header\";\r\nimport { Button, Text, Heading ,useColorModeValue} from \"@chakra-ui/react\";\r\n\r\nimport { Option } from \"./quiz.type\";\r\n\r\nexport function QuizPlayCard() {\r\n  const { id } = useParams();\r\n  const getQuiz = quizOne.find((item) => item.id === Number(id));\r\n  const navigate = useNavigate();\r\n  const {\r\n    state,\r\n    dispatch,\r\n    showNextBtn,\r\n    setShowNextBtn,\r\n    setUserClick,\r\n    userClick,\r\n    selected,\r\n    setSelected\r\n  } = useQuiz();\r\n  const color = useColorModeValue(\"gray.800\", \"white\");\r\n  function answerClick({ text, isRight }: Option) {\r\n    setSelected(text);\r\n    setShowNextBtn(true);\r\n    setUserClick(true);\r\n    getQuiz?.questions[state.questionNumber].options.find((item) => {\r\n      if (item.text === text && item.isRight === true)\r\n        dispatch({ type: \"SCORE\", payload: { score: 10 } });\r\n    });\r\n  }\r\n\r\n  function selectOptionHandler({ text, isRight }: Option) {\r\n    \r\n    if (selected === text && isRight === true) return \"wright\";\r\n    else if (selected === text && isRight === false) return \"wrong\";\r\n    else if (isRight === true) return \"wright\";\r\n  }\r\n  function nextHandler() {\r\n    if (state.questionNumber <= 10) {\r\n      dispatch({ type: \"QUESTION\" });\r\n      setShowNextBtn(false);\r\n      setUserClick(false);\r\n      setSelected(\"\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div style={{ width: \"70%\", margin: \"auto\" }}>\r\n        <Heading as=\"h2\" size=\"xl\">\r\n          {getQuiz?.quizName} Quiz !!\r\n        </Heading>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Heading as=\"h4\" size=\"md\">\r\n            Questions {state.questionNumber + 1}/{getQuiz?.questions.length}\r\n          </Heading>\r\n          <Heading as=\"h4\" size=\"md\">\r\n            Score {state.score}/100\r\n          </Heading>\r\n        </div>\r\n        <div style={{ textAlign: \"initial\", marginTop: \"2rem\" }}>\r\n          <Text fontSize=\"2xl\">\r\n            {state.questionNumber + 1}.\r\n            {getQuiz?.questions[state.questionNumber]?.question}\r\n          </Text>\r\n          {getQuiz?.questions[state.questionNumber]?.options.map((option) => {\r\n            return (\r\n              <div key={option.text}>\r\n                <button\r\n                  key={option.text}\r\n                  disabled={userClick}\r\n                  className={`btnstyle  ${\r\n                    selected && selectOptionHandler(option)\r\n                  }`}\r\n                  value={option.text}\r\n                  onClick={() => answerClick(option)}\r\n                >\r\n                   <Heading as=\"h5\" size=\"sm\" mt={1} color={color}>\r\n                   {option.text}\r\n              </Heading>\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n          {state.questionNumber <= 8 && showNextBtn && (\r\n            <Button\r\n              size=\"md\"\r\n              marginTop=\"1rem\"\r\n              border=\"2px\"\r\n              borderColor=\"green.500\"\r\n              onClick={nextHandler}\r\n            >\r\n              Next\r\n            </Button>\r\n          )}\r\n          {state.questionNumber === 9 && (\r\n            <Button\r\n              size=\"md\"\r\n              marginTop=\"1rem\"\r\n              border=\"2px\"\r\n              borderColor=\"red.500\"\r\n              onClick={() => navigate(\"/quizendpage\")}\r\n            >\r\n              Submit\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}