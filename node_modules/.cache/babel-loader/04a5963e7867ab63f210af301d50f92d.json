{"ast":null,"code":"var _jsxFileName = \"E:\\\\Github\\\\QuizApp\\\\src\\\\QuizEnd.tsx\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useQuiz } from \"./QuizProvider\";\nimport { Header } from \"./Header\";\nimport { Button, Heading } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function QuizEnd() {\n  _s();\n\n  var _useQuiz = useQuiz(),\n      state = _useQuiz.state,\n      dispatch = _useQuiz.dispatch,\n      setUserClick = _useQuiz.setUserClick,\n      setShowNextBtn = _useQuiz.setShowNextBtn,\n      setSelected = _useQuiz.setSelected;\n\n  var navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h3\",\n      size: \"lg\",\n      children: [\"Questions Correct : \", state.score / 10, \"/10\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      children: [\"Total score :\", state.score, \" /100\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: function onClick() {\n        dispatch({\n          type: \"RESET\"\n        });\n        navigate(\"/\");\n        setUserClick(false);\n        setShowNextBtn(false);\n        setSelected(\"\");\n      },\n      children: \"Play Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QuizEnd, \"07VLf8/lenYuzV3tRMlGnUcd/N4=\", false, function () {\n  return [useQuiz, useNavigate];\n});\n\n_c = QuizEnd;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizEnd\");","map":{"version":3,"sources":["E:/Github/QuizApp/src/QuizEnd.tsx"],"names":["useNavigate","useQuiz","Header","Button","Heading","QuizEnd","state","dispatch","setUserClick","setShowNextBtn","setSelected","navigate","score","type"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,kBAAhC;;;AACA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,iBAMIJ,OAAO,EANX;AAAA,MACEK,KADF,YACEA,KADF;AAAA,MAEEC,QAFF,YAEEA,QAFF;AAAA,MAGEC,YAHF,YAGEA,YAHF;AAAA,MAIEC,cAJF,YAIEA,cAJF;AAAA,MAKEC,WALF,YAKEA,WALF;;AAOA,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAiB,MAAA,IAAI,EAAC,IAAtB;AAAA,yCACuBM,KAAK,CAACM,KAAN,GAAc,EADrC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAiB,MAAA,IAAI,EAAC,IAAtB;AAAA,kCACgBN,KAAK,CAACM,KADtB;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAQE,QAAC,MAAD;AACE,MAAA,OAAO,EAAE,mBAAM;AACbL,QAAAA,QAAQ,CAAC;AAAEM,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACAF,QAAAA,QAAQ,CAAC,GAAD,CAAR;AACAH,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAC,QAAAA,cAAc,CAAC,KAAD,CAAd;AACAC,QAAAA,WAAW,CAAC,EAAD,CAAX;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAsBD;;GA/BeL,O;UAOVJ,O,EACaD,W;;;KARHK,O","sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport { useQuiz } from \"./QuizProvider\";\r\nimport { Header } from \"./Header\";\r\nimport { Button, Heading } from \"@chakra-ui/react\";\r\nexport function QuizEnd() {\r\n  const {\r\n    state,\r\n    dispatch,\r\n    setUserClick,\r\n    setShowNextBtn,\r\n    setSelected\r\n  } = useQuiz();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Heading as=\"h3\" size=\"lg\">\r\n        Questions Correct : {state.score / 10}/10\r\n      </Heading>\r\n      <Heading as=\"h4\" size=\"lg\">\r\n        Total score :{state.score} /100\r\n      </Heading>\r\n      <Button\r\n        onClick={() => {\r\n          dispatch({ type: \"RESET\" });\r\n          navigate(\"/\");\r\n          setUserClick(false);\r\n          setShowNextBtn(false);\r\n          setSelected(\"\");\r\n        }}\r\n      >\r\n        Play Again\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}