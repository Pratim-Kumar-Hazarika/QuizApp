{"ast":null,"code":"import _slicedToArray from \"E:/Github/QuizApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\Github\\\\QuizApp\\\\src\\\\QuizProvider.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useReducer, useState } from \"react\";\nimport { quizReducer, initialQuizState } from \"./quizReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar QuizContext = createContext < any({});\nexport function QuizProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useReducer = useReducer(quizReducer, initialQuizState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showNextBtn = _useState2[0],\n      setShowNextBtn = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userClick = _useState4[0],\n      setUserClick = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selected = _useState6[0],\n      setSelected = _useState6[1];\n\n  return /*#__PURE__*/_jsxDEV(QuizContext.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch,\n      showNextBtn: showNextBtn,\n      setShowNextBtn: setShowNextBtn,\n      userClick: userClick,\n      setUserClick: setUserClick,\n      selected: selected,\n      setSelected: setSelected\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizProvider, \"7UHkPIKPeldVirI+gVG8z/B73nY=\");\n\n_c = QuizProvider;\nexport function useQuiz() {\n  _s2();\n\n  return useContext(QuizContext);\n}\n\n_s2(useQuiz, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizProvider\");","map":{"version":3,"sources":["E:/Github/QuizApp/src/QuizProvider.tsx"],"names":["createContext","useContext","useReducer","useState","quizReducer","initialQuizState","QuizContext","any","QuizProvider","children","state","dispatch","showNextBtn","setShowNextBtn","userClick","setUserClick","selected","setSelected","useQuiz"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,EAAgDC,QAAhD,QAAgE,OAAhE;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,eAA9C;;AAEA,IAAMC,WAAW,GAAGN,aAAa,GAACO,GAAG,CAAC,EAAD,CAArC;AAEA,OAAO,SAASC,YAAT,OAAyC;AAAA;;AAAA,MAAjBC,QAAiB,QAAjBA,QAAiB;;AAC9C,oBAA0BP,UAAU,CAACE,WAAD,EAAcC,gBAAd,CAApC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AACA,kBAAsCR,QAAQ,CAAC,KAAD,CAA9C;AAAA;AAAA,MAAOS,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAkCV,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOW,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAgCZ,QAAQ,CAAS,EAAT,CAAxC;AAAA;AAAA,MAAOa,QAAP;AAAA,MAAiBC,WAAjB;;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLP,MAAAA,KAAK,EAALA,KADK;AAELC,MAAAA,QAAQ,EAARA,QAFK;AAGLC,MAAAA,WAAW,EAAXA,WAHK;AAILC,MAAAA,cAAc,EAAdA,cAJK;AAKLC,MAAAA,SAAS,EAATA,SALK;AAMLC,MAAAA,YAAY,EAAZA,YANK;AAOLC,MAAAA,QAAQ,EAARA,QAPK;AAQLC,MAAAA,WAAW,EAAXA;AARK,KADT;AAAA,cAYGR;AAZH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GArBeD,Y;;KAAAA,Y;AAuBhB,OAAO,SAASU,OAAT,GAAmB;AAAA;;AACxB,SAAOjB,UAAU,CAACK,WAAD,CAAjB;AACD;;IAFeY,O","sourcesContent":["import { createContext, useContext, useReducer, useState } from \"react\";\r\nimport { quizReducer, initialQuizState } from \"./quizReducer\";\r\n\r\nconst QuizContext = createContext<any({} );\r\n\r\nexport function QuizProvider({ children }: any) {\r\n  const [state, dispatch] = useReducer(quizReducer, initialQuizState);\r\n  const [showNextBtn, setShowNextBtn] = useState(false);\r\n  const [userClick, setUserClick] = useState(false);\r\n  const [selected, setSelected] = useState<String>(\"\");\r\n  return (\r\n    <QuizContext.Provider\r\n      value={{\r\n        state,\r\n        dispatch,\r\n        showNextBtn,\r\n        setShowNextBtn,\r\n        userClick,\r\n        setUserClick,\r\n        selected,\r\n        setSelected\r\n      }}\r\n    >\r\n      {children}\r\n    </QuizContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useQuiz() {\r\n  return useContext(QuizContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}